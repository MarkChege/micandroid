<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">



	<!-- can have different search client for indexing & searching -->
	<beans:bean id="searchClient" class="com.personalization.utils.SearchClient">
		<beans:property name="serverConfiguration">
				<beans:ref bean="serverConfiguration" />
		</beans:property>
	</beans:bean>

	<!-- Server configuration -->
	<beans:bean id="serverConfiguration" class="com.personalization.utils.ServerConfiguration">
		<beans:property name="clusterName" value="shopizerindexes"/>
		<!-- local (embedded version, will create new indexes in the working directory) or remote (requires existing server) -->
		<beans:property name="mode" value="local"/>
		<!-- those properties are used when configured for remote -->
		<beans:property name="clusterHost" value="127.0.0.1"/>
		<beans:property name="clusterPort" value="9300"/>
	</beans:bean>


	<!--
	This file contains flow definitions for indexing and searching
	-->

	
	<beans:bean id="search-product-workflow" class="com.personalization.services.search.workflow.SearchWorkflow">
		<beans:property name="searchWorkflow">
			<beans:list>
				<beans:bean id="search" class="com.personalization.services.search.worker.SearchWorkerImpl"/>
			</beans:list>
		</beans:property>
		<beans:property name="searchClient">
				<beans:ref bean="searchClient" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="search-autocomplete-workflow" class="com.personalization.services.search.workflow.SearchWorkflow">
		<beans:property name="searchKeywordWorkflow">
			<beans:list>
				<beans:bean id="searchKeyword" class="com.personalization.services.search.worker.KeywordSearchWorkerImpl"/>
			</beans:list>
		</beans:property>
		<beans:property name="searchClient">
				<beans:ref bean="searchClient" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="index-product-workflow" class="com.personalization.services.search.workflow.IndexWorkflow">
		<beans:property name="indexWorkflow">
			<beans:list>
				<beans:ref bean="index" />
				<beans:ref bean="keyword" />
			</beans:list>
		</beans:property>
		<beans:property name="searchClient">
				<beans:ref bean="searchClient" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="delete-product-workflow" class="com.personalization.services.search.workflow.DeleteObjectWorkflow">
		<beans:property name="deleteObjectWorkflow">
			<beans:list>
				<beans:bean id="deleteObject" class="com.personalization.services.search.worker.DeleteObjectImpl"/>
				<beans:ref bean="deleteKeywords" />
			</beans:list>
		</beans:property>
		<beans:property name="searchClient">
				<beans:ref bean="searchClient" />
		</beans:property>
	</beans:bean>

	<beans:bean id="get-workflow" class="com.personalization.services.search.workflow.SearchWorkflow">
		<beans:property name="searchClient">
				<beans:ref bean="searchClient" />
		</beans:property>
	</beans:bean>



	<!-- beans contained in workflows -->

	<beans:bean id="deleteKeywords" class="com.personalization.services.search.worker.DeleteKeywordsImpl">
		<beans:property name="indexConfiguration">
				<beans:ref bean="keywordindex" />
		</beans:property>
	</beans:bean>
	
	<beans:bean id="index" class="com.personalization.services.search.worker.ObjectIndexerImpl">
		<beans:property name="indexConfigurations">
			<beans:list>
				<beans:ref bean="index1" />
				<beans:ref bean="index2" />
			</beans:list>
		</beans:property>
	</beans:bean>
	

	
	<!-- Have 2 indexes according to the language -->
	<!-- The presence of those properties will allow the creation of mapping files -->
	<beans:bean id="index1" class="com.personalization.utils.IndexConfiguration">
		<beans:property name="collectionName" value="product_en"/>
		<beans:property name="indexName" value="product"/>
		<beans:property name="mappingFileName" value="product_en.json"/>
	</beans:bean>
	
	<beans:bean id="index2" class="com.personalization.utils.IndexConfiguration">
		<beans:property name="collectionName" value="product_fr"/>
		<beans:property name="indexName" value="product"/>
		<beans:property name="mappingFileName" value="product_fr.json"/>
	</beans:bean>
	
	<beans:bean id="keyword" class="com.personalization.services.search.worker.KeywordIndexerImpl">
		<beans:property name="indexConfigurations">
			<beans:list>
				<beans:ref bean="keywordindex" />
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="keywordindex" class="com.personalization.utils.CustomIndexConfiguration">
		<beans:property name="collectionName" value="keyword_%lang%"/>
		<beans:property name="createOnIndexName" value="product"/>
		<beans:property name="fields">
			<beans:list>
				<beans:ref bean="field1" />
				<beans:ref bean="field2" />
			</beans:list>
		</beans:property>
		<!--
		<beans:property name="filters">
			<beans:list>
				<beans:ref bean="filter1" />
			</beans:list>
		</beans:property>
		-->
	</beans:bean>
	<!-- supported field types List, Integer, Double, Boolean, String -->
	<beans:bean id="field1" class="com.personalization.utils.CustomIndexFieldConfiguration">
		<beans:property name="fieldName" value="tags"/>
		<beans:property name="fieldType" value="List"/>
	</beans:bean>
	<beans:bean id="field2" class="com.personalization.utils.CustomIndexFieldConfiguration">
		<beans:property name="fieldName" value="name"/>
		<beans:property name="fieldType" value="String"/>
	</beans:bean>
	<!--
	<beans:bean id="filter1" class="com.personalization.utils.CustomIndexFieldConfiguration">
		<beans:property name="fieldName" value="price"/>
		<beans:property name="fieldType" value="Double"/>
	</beans:bean>
	-->


</beans:beans>